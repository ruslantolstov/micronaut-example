plugins {
    id("co.uzzu.dotenv.gradle") version "1.1.0"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.1"
    id("io.micronaut.aot") version "4.3.1"
}

version = "0.1"
group = "com.support.eng.notifier"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor") // required for validations
    implementation("io.micronaut.validation:micronaut-validation") // required for validations
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut:micronaut-http-client")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-management")
    runtimeOnly("org.yaml:snakeyaml") // required for configuration
    testImplementation("io.micronaut:micronaut-http-client")

    annotationProcessor("org.immutables:value:2.9.2")  // immutables
    implementation("org.immutables:value:2.9.2") // immutables
    compileOnly("com.fasterxml.jackson.core:jackson-databind") // jackson


    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.security:micronaut-security-oauth2")


    compileOnly("org.projectlombok:lombok:1.18.30") // lombok
    annotationProcessor("org.projectlombok:lombok:1.18.30") // lombok
    annotationProcessor("io.micronaut:micronaut-inject-java") // required for lombok
}


application {
    mainClass.set("com.support.eng.notifier.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}


graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.support.eng.notifier.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}


/**
 * Custom Tasks
 */
run.configure {
    group("Local Development")
    description("Run ${appName} in local run-mode, sourcing environment variables from .env file.")
    doFirst {
        environment = env.allVariables
    }
}


